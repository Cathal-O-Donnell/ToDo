@model IEnumerable<ToDo.Models.MusicGenre>

<h1 style="color: blue; text-align: center;">Music Genres</h1>
<hr />

<table id="dataTableMusicGenres" class="table table-bordered table-responsive table-striped" cellspacing="0" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MusicGenreID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MusicGenreName)
            </th>
            <th>
                @*blank*@
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.MusicGenreID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MusicGenreName)
                </td>
                <td>
                    <button  onclick="DeleteGenreModal('@item.MusicGenreName', '@item.MusicGenreID');" class="btn btn-sm btn-danger">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <label for="txtGenre">Genre:</label>
    <input id="txtGenre" />

    <span class="btn btn-sm btn-success" onclick="AddGenre();">Add Genre</span>

    <h2 id="txtBG" style="color: green; text-align: center;"></h2>
</div>

@*Bootstap Modal Window*@
<div class="modal fade" id="GenreModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 id="txtGenreModal" class="modal-title">Delete </h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to permanently delete this Genre?</p>

            </div>
            <div class="modal-footer">
                <button type="button" onclick="RemoveGenre();" class="btn btn-success" data-dismiss="modal" style="float: left">Confirm</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

    var GenreModalID = null;

     //DataTable
    $(document).ready(function () {
        $('#dataTableMusicGenres').DataTable();
    });


    function DeleteGenreModal(Name, ID) {

        GenreModalID = ID;

        txtGenreModal.innerText = "Delete " + Name;
        $("#GenreModal").modal();
    }

    function RemoveGenre() {

        gID = GenreModalID;

        $.ajax({
            type: "GET",
            url: '@Url.Action("RemoveGenre", "Home")',
            data: { id: gID },
            success: function (data) {

                $('#AdminBandGenres').html(data);
                $('#AdminBandGenres').fadeIn("fast")

                $('#EventCatModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();

                document.getElementById("txtBG").style.color = "#ff0000";
                txtBG.innerText = "Genre has been deleted";
            }
        });
    }

    function AddGenre()
    {
        var bg = document.getElementById('txtGenre').value
        console.log(bg);

        $.ajax({
            type: "GET",
            url: '@Url.Action("AddBandGenre", "Home")',
            data: { Genre: bg },
            success: function (data) {


                $("#AdminBandGenres").html("");
                $("#AdminBandGenres").html(data);
                document.getElementById("txtBG").style.color = "green";
                txtBG.innerText = bg + " has been added";

            },
            error: function (data) {

                txtBG.innerText = "An error has occurred";
                txtBG.style = "color: red;"
            }
        });
    }
</script>



