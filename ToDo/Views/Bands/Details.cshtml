@model ToDo.Models.Band

<style>
    body, html {
        height: 100%;
        margin: 0;
        font: 400 15px/1.8 "Lato", sans-serif;
        color: #777;
    }
</style>

@if (ViewBag.IsOwner == true)
{
    <div style="padding-top: 25px;">
        @Html.ActionLink("Edit Band", "Edit", new { id = Model.BandID }, new { @class = "btn btn-primary" })

        <button id="btnRemoveBand" class="btn btn-danger">Remove</button>
    </div>
}

<h1>@Model.BandName - @Model.BandGenre.MusicGenreName</h1>


<div>
    <hr />

    <div class="row">
        @*Image*@
        <div class="col-sm-3">

            @*Check if event has image*@
            @if (Model.BandFiles.Any(f => f.BandFileType == ToDo.Models.FileType.EventImage))
            {
                <img src="~/File?id=@Model.BandFiles.First().BandFileId" alt="imgEvent" style="width: 360px; height:240px;" />
            }

            @*No event image was uploaded, display default image*@
            else
            {
                <img src="~/default-image.jpg" alt="imgDefault" style="width: 250px; height:250px;" />
            }

            <p style="padding-top: 25px;">
                @Html.ActionLink("Book Band", "BookBand", new { id = Model.BandID }, new { @class = "btn btn-pri" })
            </p>

        </div>

        <div class="col-sm-9">
            @*Tabs*@
            <div class="col-sm-9">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#home">@Html.DisplayNameFor(model => model.BandDescription)</a></li>
                    <li><a data-toggle="tab" href="#menu1">Contact Details</a></li>
                </ul>

                <div class="tab-content">

                    @*Description*@
                    <div id="home" class="tab-pane fade in active">
                        <p style="white-space: pre-wrap; padding-top:10px;">@Html.DisplayFor(model => model.BandDescription)</p>
                    </div>

                    @*Conatct Details*@
                    <div id="menu1" class="tab-pane fade">
                        <div class="col-sm-4">
                            <dl>
                                @if (Model.BandContactNumber != null)
                                {
                                    <dt>@Html.DisplayNameFor(model => model.BandContactNumber):</dt>
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandContactNumber)</dd>
                                }

                                @if (Model.BandEmail != null)
                                {
                                    <dt>@Html.DisplayNameFor(model => model.BandEmail):</dt>
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandEmail)</dd>
                                }

                                @if (Model.BandManagerName != null)
                                {
                                    <dt>@Html.DisplayNameFor(model => model.BandManagerName):</dt>
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandManagerName)</dd>
                                }

                                @if (Model.BandManagerEmail != null)
                                {
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandManagerEmail)</dd>
                                }

                                @if (Model.BandPressContact != null)
                                {
                                    <dt>@Html.DisplayNameFor(model => model.BandPressContact):</dt>
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandPressContact)</dd>
                                }

                                @if (Model.BandRecordLabel != null)
                                {
                                    <dt>@Html.DisplayNameFor(model => model.BandRecordLabel):</dt>
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandRecordLabel)</dd>
                                }

                                @if (Model.BandBookingAgentName != null)
                                {
                                    <dt>@Html.DisplayNameFor(model => model.BandBookingAgentName):</dt>
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandBookingAgentName)</dd>
                                }

                                @if (Model.BandBookingAgentEmail != null)
                                {
                                    <dd style="padding-left:25px;">@Html.DisplayFor(model => model.BandBookingAgentEmail)</dd>
                                }
                                
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" style="padding-top: 50px;">
        @*YouTube*@
        <div class="col-sm-5">

            @if (ViewBag.hasYT == true)
            {
                <div id="player">

                </div>
            }
        </div>

        <div class="col-sm-2">
        </div>

        @*Soundcloud*@
        <div class="col-sm-5">

            @if (ViewBag.hasSC == true)
            {
                <div id="scEmbed">

                </div>
            }
        </div>

        <div style="padding-top: 25px;">

            @if (ViewBag.hasEvents == false)
            {
                <h2 style="text-align:center;">There is no events for this band, please check back later</h2>
            }

            else
            {

                @*Partial View*@
                <div id="BandEventsTable">
                    @Html.Action("BandEventsPartialView", new { BandID = Model.BandID })
                </div>
            }
        </div>

    </div>

    <div class="row">
        <h2>Comments</h2>
        <div id="disqus_thread"></div>
    </div>
</div>

@*Bootstap Modal Window*@
<div class="modal fade" id="BandRemoveModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 id="txtVenueRemoveModal" class="modal-title">Delete @Model.BandName</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to remove this band?</p>

            </div>
            <div class="modal-footer">
                @Html.ActionLink("Remove", "RemoveBand", new { id = Model.BandID }, new { @class = "btn btn-success", @style = "float: left" })
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*Soundcloud*@
<script src="https://connect.soundcloud.com/sdk.js"></script>

<script>

    function BookBand(bandID) {
        console.log("Book band function hit ID: " + bandID);
    }

    $( document ).ready(function() {

        $("#btnRemoveBand").click(function(){
            $("#BandRemoveModal").modal();
        });

        var hasSC =  @Html.Raw(Json.Encode(@ViewBag.hasSC));
        console.log(hasSC);
        if (hasSC == true) {
            var sc =  @Html.Raw(Json.Encode(@ViewBag.SoundCloud));

            console.log(sc);
            var container = document.getElementById('scEmbed');
            SC.oEmbed(sc, container);
        }

    });

    //YouTube iFrame API code
    //This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    //This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {

        //Video ID
        var youTubeLink = @Html.Raw(Json.Encode(@ViewBag.youTubeID))

        player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: youTubeLink,
            events: {
                //'onReady': onPlayerReady, - AUTOPLAY
                'onStateChange': onPlayerStateChange
            }
        });
    }

    //This  function causes the video the play automatically, NOT CURRENTLY USED
    function onPlayerReady(event) {
        event.target.playVideo();
    }

    //The API calls this function when the player's state changes.
    //The function indicates that when playing a video (state=1),
    //the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo() {
        player.stopVideo();
    }

    //Comments section
    (function() { // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//s00144297.disqus.com/embed.js';
        //src="//s00144297.disqus.com/count.js

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
