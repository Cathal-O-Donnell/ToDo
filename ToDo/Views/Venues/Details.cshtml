@model ToDo.Models.Venue

@*<body onload="GoogleMap(@ViewBag.Lat, @ViewBag.Long)">*@
<body>

    @*Check if current user is the owner of this event*@
    @if (ViewBag.IsOwner == true)
    {
        <div style="padding-top: 25px;">
            @Html.ActionLink("Edit", "Edit", new { id = Model.VenueID }, new { @class = "btn btn-primary" })

            @Html.ActionLink("Remove", "Delete", new { id = Model.VenueID }, new { @class = "btn btn-danger" })
        </div>
    }

    <h1>@Model.VenueName</h1>

    <div>
        <hr />
        <div class="row">

            @*Image*@
            <div class="col-sm-3">

                @*Check if event has image*@
                @if (Model.VenueFiles.Any(f => f.VenueFileType == ToDo.Models.FileType.EventImage))
                {
                    <img src="~/File?id=@Model.VenueFiles.First().VenueFileId" alt="imgEvent" style="width: 250px; height:250px;" />
                }

                @*No event image was uploaded, display default image*@
                else
                {
                    <h4>No Image</h4>
                }

            </div>

            @*Tabs*@
            <div class="col-sm-9">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#home">@Html.DisplayNameFor(model => model.VenueDescription)</a></li>
                    <li><a data-toggle="tab" href="#menu1" onclick="GoogleMap(@ViewBag.Lat, @ViewBag.Long)">Map</a></li>
                    <li><a data-toggle="tab" href="#menu2">Contact Us</a></li>
                </ul>

                <div class="tab-content">

                    @*Details*@
                    <div id="home" class="tab-pane fade in active">
                        <p style="white-space: pre-wrap; padding-top:10px;">@Html.DisplayFor(model => model.VenueDescription)</p>
                    </div>

                    @*Map*@
                    <div id="menu1" class="tab-pane fade">
                        @if (ViewBag.hasMap == true)
                        {
                            <div id="googleMap" style="width:600px; height:600px; padding: 25px;">

                            </div>
                        }

                        else
                        {
                                <h3>No map available</h3>
                        }
                    </div>

                    @*Contact Us*@
                    <div id="menu2" class="tab-pane fade">

                        @if (Model.VenuePhoneNumber != null)
                        {
                            <h3>@Html.DisplayNameFor(model => model.VenuePhoneNumber)</h3>
                            <h4>@Model.VenuePhoneNumber</h4>
                        }

                        @if (Model.VenueEmail != null)
                        {
                            <h3>@Html.DisplayNameFor(model => model.VenueEmail)</h3>
                            <h4>@Model.VenueEmail</h4>
                        }

                    </div>
                </div>
            </div>
        </div>


        <div style="padding-top: 25px;">
            @if (ViewBag.IsOwner == true)
            {
                @Html.ActionLink("Add Event", "Create", "Events", new { id = Model.VenueID }, new { @class = "btn btn-info btn-sm" })
            }

            @if (ViewBag.noEvents == true)
            {
                <h2>No Events for this venue currently</h2>
            }

            else
            {
                <table id="eventsTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Event Date</th>
                            <th>Start Type</th>
                            <th>@*Details Button*@</th>

                        </tr>
                    </thead>

                    <tbody>

                        @foreach (var item in Model.VenueEvents)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.EventTitle)</td>
                                <td>@Html.DisplayFor(modelItem => item.EventDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.EventCategory)</td>
                                <td>@Html.ActionLink("Details", "Details", "Events", new { id = item.EventID }, new { @class = "btn btn-info btn-sm" })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>

    <div class="row">
        <h2>Comments</h2>
        <div id="disqus_thread"></div>
    </div>

</body>

@*Google Maps and Directions*@
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyChwQrjSkHEgvgg56PI5G_aEGFoAbk-Vg8"></script>

<script>

    //Google Map
    function GoogleMap(lat, lon) {
        console.log("Google Mao function hit");
        // Array of stylin for map
        var styles = [
          {
              stylers: [
                { hue: "#b3ccff" },
                { saturation: -30 }
              ]
          },
          //Road Labels
          {
              featureType: "road",
              elementType: "labels",
              stylers: [
                { visibility: "on" }
              ]
          },
          //Road Geometry
          {
              featureType: "road",
              elementType: "geometry",
              stylers: [
                { lightness: 100 },
                { visibility: "simplified" }
              ]
          }
        ];

        var styledMap = new google.maps.StyledMapType(styles,
          { name: "Styled Map" });

        //Get center using longitude and latitude passed back from controller
        var center = new google.maps.LatLng(lat, lon);

        //Specify Map Options
        var mapOptions = {
            zoom: 17, //Map Zoom Level
            center: center, //Set Map center point
            mapTypeControlOptions: {
                mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
            }
        };

        //Assign Map to div
        var map = new google.maps.Map(document.getElementById('googleMap'),
          mapOptions);

        var marker = new google.maps.Marker({
            position: center,
            map: map,
            title: "@ViewBag.EventTitle"
        })

        map.mapTypes.set('map_style', styledMap);
        map.setMapTypeId('map_style');

        // google.maps.event.addDomListener(window, "load", initialize);
    }

    //Comments section
    (function() { // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//s00144297.disqus.com/embed.js';
        //src="//s00144297.disqus.com/count.js

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
