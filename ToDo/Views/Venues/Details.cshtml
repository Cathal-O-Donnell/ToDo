@model ToDo.Models.Venue

<style>
    .nav-tabs {
        border-bottom: 2px solid #DDD;
    }

        .nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {
            border-width: 0;
        }

        .nav-tabs > li > a {
            border: none;
            color: #666;
        }

            .nav-tabs > li.active > a, .nav-tabs > li > a:hover {
                border: none;
                color: #E23737 !important;
                background: transparent;
            }

            .nav-tabs > li > a::after {
                content: "";
                background: #E23737;
                height: 2px;
                position: absolute;
                width: 100%;
                left: 0px;
                bottom: -1px;
                transition: all 250ms ease 0s;
                transform: scale(0);
            }

        .nav-tabs > li.active > a::after, .nav-tabs > li:hover > a::after {
            transform: scale(1);
        }

    .tab-nav > li > a::after {
        background: #21527d none repeat scroll 0% 0%;
        color: #fff;
    }

    .tab-pane {
        padding: 15px 0;
    }

    .tab-content {
        padding: 20px;
    }

    .card {
        background: #FFF none repeat scroll 0% 0%;
        box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);
        margin-bottom: 30px;
    }
</style>


@*Check if current user is the owner of this event*@
@if (ViewBag.IsOwner == true)
{
    @*Only the venue owner can see this section*@
    <div style="padding-top: 25px;">
        @Html.ActionLink("Edit Venue", "Edit", new { id = Model.VenueID }, new { @class = "btn btn-primary" })

        <button id="btnRemoveVenue" class="btn btn-warning">Hide Venue</button>

        @Html.ActionLink("Add Event", "Create", "Events", new { id = Model.VenueID }, new { @class = "btn btn-success" })

        <div class="row">
            <div class="col-md-2">
                <h3>@Html.DisplayNameFor(model => model.VenueViewCounter) @Model.VenueViewCounter</h3>
            </div>
            <div class="col-md-3">
                <h3 style="color: green;">@Html.DisplayNameFor(model => model.VenueDailyViewCounter) +@Model.VenueDailyViewCounter</h3>
            </div>
        </div>
    </div>
}

<div class="eventschedule">
    <div class="content">
        <h2 class="CustomH3" style="text-align:center; padding-bottom: 10px;">@Model.VenueName<span> - @Html.ActionLink(Model.VenueTown.TownName, "Index", "Venues", new { AdvancedSearch = "true", Town = Model.VenueTown.TownID }, null)</span></h2>
        <hr />
    </div>
</div>

<div>
    <div class="row">

        @*Image*@
        <div class="col-sm-3">

            @*Check if event has image*@
            @if (Model.VenueFiles.Any(f => f.VenueFileType == ToDo.Models.FileType.EventImage))
            {
                <img src="~/File?id=@Model.VenueFiles.First().VenueFileId" alt="imgEvent" style="width: 360px; height:240px;" />
            }

            @*No event image was uploaded, display default image*@
            else
            {
                <img src="~/default-image.jpg" alt="imgDefault" style="width: 360px; height:240px;" />
            }

            <button onclick="VenueSubscribe(@Model.VenueID);" class="btn btn-primary">Subscribe</button>

        </div>

        @*Tabs*@
        <div class="col-sm-9">
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#home">@Html.DisplayNameFor(model => model.VenueDescription)</a></li>
                <li><a data-toggle="tab" href="#menu1">Location</a></li>
                <li><a data-toggle="tab" href="#menu2">Contact Us</a></li>
            </ul>

            <div class="tab-content">

                @*Description Tab*@
                <div id="home" class="tab-pane fade in active">
                    <p style="white-space: pre-wrap; padding-top:10px;">@Html.DisplayFor(model => model.VenueDescription)</p>
                </div>

                @*Map Tab*@
                <div id="menu1" class="tab-pane fade">
                    @if (ViewBag.hasMap == true)
                    {

                        <div class="row">
                            <div class="col-sm-6" id="googleMap">


                            </div>

                            <div class="col-sm-6">

                                <h3>Need Directions?</h3>

                                <input type="text" class="CustomTextBox" placeholder="Travelling From..." id="txtFrom">

                                <p style="padding-top: 10px; padding-bottom: 10px;">
                                    <button onclick="PlanRoute()" class="btn btn-success">Get Directions</button>
                                </p>

                                <h1 style="text-align:center;" id="txtDirections"></h1>

                                <div id="dir">

                                </div>
                            </div>
                        </div>
                    }

                    else
                    {
                        <h3>No map available</h3>
                    }
                </div>

                @*Contact Us*@
                <div id="menu2" class="tab-pane fade">

                    @if (Model.VenuePhoneNumber != null)
                    {
                        <h3>@Html.DisplayNameFor(model => model.VenuePhoneNumber)</h3>
                        <h4>@Model.VenuePhoneNumber</h4>
                    }

                    @if (Model.VenueEmail != null)
                    {
                        <h3>@Html.DisplayNameFor(model => model.VenueEmail)</h3>
                        <h4>@Model.VenueEmail</h4>
                    }

                </div>
            </div>
        </div>
    </div>


    <div style="padding-top: 25px;">

        @if (ViewBag.noEvents == true)
            {
            <h2 style="text-align:center;">There is no events for this venue, please check back later</h2>
        }

        else
        {

            @*Partial View*@
            <div id="VenueEventsTable">
                @Html.Action("VenuesEventsPartialView", new { VenueID = Model.VenueID })
            </div>
        }
    </div>
</div>

<div class="row">
    <h2>Comments</h2>
    <div id="disqus_thread"></div>
</div>

@*Bootstap Modal Window*@
<div class="modal fade" id="VenueRemoveModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 id="txtVenueRemoveModal" class="modal-title">Delete @Model.VenueName</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to remove this venue?</p>

            </div>
            <div class="modal-footer">
                @*<button type="button" onclick="RemoveVenue();" class="btn btn-success" data-dismiss="modal" style="float: left">Confirm</button>*@
                @Html.ActionLink("Remove", "RemoveVenue", new { id = Model.VenueID }, new { @class = "btn btn-success", @style = "float: left" })
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*</body>*@

@*Google Maps and Directions*@
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyChwQrjSkHEgvgg56PI5G_aEGFoAbk-Vg8"></script>

<script>

    $(document).ready(function(){
        $("#btnRemoveVenue").click(function(){
            console.log('RemoveVenueModal function hit');
            $("#VenueRemoveModal").modal();
        });
    });

    function RemoveVenue() {
        console.log('RemoveVenueModal function hit');
        $("#VenueRemoveModal").modal();
    }

    //Directions
    function PlanRoute() {

        //Check if the user has entered a starting location
        var startingLoc = document.getElementById('txtFrom').value;

        if (startingLoc == null || startingLoc == "") {
            alert("You must enter a starting location first");
        }

        else
        {
            GetMap();
        }

    }

    function GetMap() {

        //Clear last directions
        document.getElementById('dir').innerHTML = "";
        txtDirections.innerHTML = "";

        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer();

        //Get start and End locations that the user selected
        var startLocation = document.getElementById('txtFrom').value;
        var endLocation =  @Html.Raw(Json.Encode(@ViewBag.Address));

        console.log(startLocation);
        console.log(endLocation);

        var map = new google.maps.Map(document.getElementById('googleMap'), {

        });

        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('dir'));

        //Map options
        var request = {
            origin: startLocation,
            destination: endLocation,
            travelMode: google.maps.DirectionsTravelMode.DRIVING
        };

        directionsService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
            }

            $('txtDirections').innerHTML = directions.getDuration().seconds + " seconds";

        });
    }

    //Google Map
    function GoogleMap(lat, lon) {
        console.log("Google Map function hit");
        // Array of stylin for map
        var styles = [
          {
              stylers: [
                { hue: "#b3ccff" },
                { saturation: -30 }
              ]
          },
          //Road Labels
          {
              featureType: "road",
              elementType: "labels",
              stylers: [
                { visibility: "on" }
              ]
          },
          //Road Geometry
          {
              featureType: "road",
              elementType: "geometry",
              stylers: [
                { lightness: 100 },
                { visibility: "simplified" }
              ]
          }
        ];

        var styledMap = new google.maps.StyledMapType(styles,
          { name: "Styled Map" });

        //Get center using longitude and latitude passed back from controller
        var center = new google.maps.LatLng(lat, lon);

        //Specify Map Options
        var mapOptions = {
            zoom: 17, //Map Zoom Level
            center: center, //Set Map center point
            mapTypeControlOptions: {
                mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
            }
        };

        //Assign Map to div
        var map = new google.maps.Map(document.getElementById('googleMap'),
          mapOptions);

        var marker = new google.maps.Marker({
            position: center,
            map: map,
            title: "@ViewBag.EventTitle"
        })

        map.mapTypes.set('map_style', styledMap);
        map.setMapTypeId('map_style');

        google.maps.event.trigger(map, "resize");
        map.setCenter(center);
        // google.maps.event.addDomListener(window, "load", initialize);
    }

    //Comments section
    (function () { // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');

        s.src = '//s00144297.disqus.com/embed.js';
        //src="//s00144297.disqus.com/count.js

        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {

        var hasMap =  @Html.Raw(Json.Encode(@ViewBag.hasMap));
        var lat =  @Html.Raw(Json.Encode(@ViewBag.Lat));
        var long =  @Html.Raw(Json.Encode(@ViewBag.Long));

        if (long != null && lat != null) {
            console.log("not null");
            GoogleMap(lat, long);
        }

    });

    //Venue Subscribe Ajax
    function VenueSubscribe(vID) {
        console.log('Venue Subscribe function hit');

        $.ajax({
            type: "GET",
            url: '@Url.Action("VenueMailingList", "Venues")',
            data: { id: vID },
            success: function (data) {

                $('#AdminBands').html(data);
                $('#AdminBands').fadeIn("fast")
            }
        });
    }

</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
